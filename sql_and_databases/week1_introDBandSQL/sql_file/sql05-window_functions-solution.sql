/* BEFORE RUNNING THE QUERIES IN THIS FILE, MAKE SURE THE DATABASE 
   NAMED ORDERS IS CREATED AND ALL THE TABLES ARE IMPORTED WITH THE NECESSARY DATA 
   USING THE SQL DUMP FILE GIVEN.*/

USE ORDERS;

-- [1] ADD ROW NUMBERS TO EACH PRODUCT AT A PRODUCT_CLASS_CODE LEVEL
SELECT 
    PRODUCT_CLASS_CODE,
	ROW_NUMBER() OVER (PARTITION BY PRODUCT_CLASS_CODE) AS ROW_NUM,
	PRODUCT_ID, 
    PRODUCT_DESC
FROM PRODUCT;

-- [2] RANK THE PRODUCTS IN EACH PRODUCT_CLASS IN THE DESCENDING ORDER OF PRICE
SELECT 
	PRODUCT_CLASS_CODE,
	PRODUCT_ID, 
	PRODUCT_DESC,
	RANK() OVER (PARTITION BY PRODUCT_CLASS_CODE ORDER BY PRODUCT_PRICE DESC) AS PRICE_RANK,
	PRODUCT_PRICE
FROM PRODUCT;

-- [3] WHAT ARE THE INSTANCES WHERE CUSTOMERS HAVE ORDERED THE SAME OR MORE QUANTITY THAN WHAT THEY PURCHASED IN THEIR PREVIOUS ORDER?
SELECT 
	CUSTOMER_ID, 
    ORDER_ID, 
    SUM(PRODUCT_QUANTITY) QUANTITY,
    LAG(SUM(PRODUCT_QUANTITY)) OVER (PARTITION BY CUSTOMER_ID ORDER BY ORDER_ID ASC)  AS PREVIOUS_QUANTITY,
    CASE WHEN SUM(PRODUCT_QUANTITY) >= LAG(SUM(PRODUCT_QUANTITY)) OVER (PARTITION BY CUSTOMER_ID ORDER BY ORDER_ID ASC) THEN 1 ELSE 0 END AS FLAG
FROM 
	ORDER_HEADER INNER JOIN ORDER_ITEMS 
    USING(ORDER_ID) 
GROUP BY 1,2;