/* BEFORE RUNNING THE QUERIES IN THIS FILE, MAKE SURE THE DATABASE NAMED 
   ORDERS IS CREATED AND ALL THE TABLES ARE IMPORTED WITH THE NECESSARY DATA 
   USING THE SQL DUMP FILE GIVEN.*/

USE ORDERS;

-- [1] FIND ALL THE PRODUCTS FROM THE PRODUCT TABLE WHICH ARE PRICED AT ABOVE-AVERAGE RATES
SELECT 
	PRODUCT_ID,
    PRODUCT_DESC
FROM PRODUCT
WHERE PRODUCT_PRICE > (SELECT AVG(PRODUCT_PRICE) FROM PRODUCT);

-- [2] FIND ALL THE ORDERS FROM ORDER_ITEMS WHERE THE PRODUCT PRICE IS GREATER THAN 10000
SELECT ORDER_ID
FROM ORDER_ITEMS
WHERE PRODUCT_ID IN (SELECT PRODUCT_ID 
					 FROM PRODUCT 
					 WHERE PRODUCT_PRICE > 10000);

-- [3] ALTERNATE WAY TO FIND PRODUCTS PRICED BELOW AND ABOVE AVERAGE - SUBQUERY IN CASE WHEN
SELECT 
	PRODUCT_ID,
    CASE WHEN PRODUCT_PRICE > (SELECT AVG(PRODUCT_PRICE) FROM PRODUCT) THEN 'ABOVE AVERAGE'
    ELSE 'BELOW AVERAGE' END AS PRICE_RANGE
FROM PRODUCT;              

/* [4] IF YOU WANT YOUR CODE TO LOOK NEAT, YOU CAN KEEP ALL THE SUBQUERIES 
   IN ONE PLACE USING A CTE (COMMON TABLE EXPRESSIONS) AND USE THEM WHEREVER YOU LIKE
*/

WITH PRODUCT_LIST AS (
	SELECT PRODUCT_ID 
    FROM PRODUCT 
	WHERE PRODUCT_PRICE > 10000)

SELECT * 
FROM ORDER_ITEMS
WHERE PRODUCT_ID IN (SELECT * FROM PRODUCT_LIST);