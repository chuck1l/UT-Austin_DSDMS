/* BEFORE RUNNING THE QUERIES IN THIS FILE, MAKE SURE THE DATABASE NAMED ORDERS 
   IS CREATED AND ALL THE TABLES ARE IMPORTED WITH THE NECESSARY DATA 
   USING THE SQL DUMP FILE GIVEN.*/

USE ORDERS;

-- [1] FIND THE TOTAL NUMBER OF RECORDS IN THE PRODUCT TABLE
SELECT COUNT(*) AS CNT FROM PRODUCT;

-- [2.1] FETCH THE SUM OF PRODUCT PRICE AND AVERAGE PRODUCT PRICE FOR EACH PRODUCT_CLASS_CODE. 
-- [2.2] SELECT ONLY THE PRODUCT CLASSES THAT HAVE AN AVERAGE PRICE >= 4000
SELECT 
	PRODUCT_CLASS_CODE, 
    SUM(PRODUCT_PRICE) AS TOTAL_PRICE,
    AVG(PRODUCT_PRICE) AS AVG_PRICE
FROM PRODUCT
GROUP BY 
	PRODUCT_CLASS_CODE
HAVING AVG_PRICE >= 4000;

-- [3] FETCH THE TOTAL NUMBER OF MALE AND FEMALE CUSTOMERS - (USE ONLINE_CUSTOMER TABLE)
SELECT 
    CUSTOMER_GENDER, 
    COUNT(CUSTOMER_GENDER) AS GENDER_COUNT
FROM ONLINE_CUSTOMER  
GROUP BY CUSTOMER_GENDER;

-- [4] DISPLAY THE COUNT OF UNIQUE CITIES IN THE ADDRESS TABLE
SELECT COUNT(DISTINCT CITY) AS UNIQUE_CITIES FROM ADDRESS;

/* [5] CHECK YOUR INVENTORY STOCK: 
   IF QUANTITY IS LESS THAN OR EQUAL TO 50, CALL IT "LOW STOCK"
   IF QUANTITY IS GREATER THAN 50 AND LESS THAN OR EQUAL TO 150, CALL IT "MEDIUM STOCK"
   IF QUANTITY IS GREATER THAN 150, "HIGH STOCK" */
SELECT PRODUCT_ID, PRODUCT_DESC, PRODUCT_CLASS_CODE, PRODUCT_QUANTITY_AVAIL,
CASE 
	WHEN PRODUCT_QUANTITY_AVAIL <= 50 THEN 'LOW STOCK'
    WHEN PRODUCT_QUANTITY_AVAIL > 50 AND PRODUCT_QUANTITY_AVAIL <= 150 THEN 'MEDIUM STOCK'
    WHEN PRODUCT_QUANTITY_AVAIL > 150  THEN 'HIGH STOCK'
END AS AVAILABILITY_STATUS
FROM PRODUCT;